<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAA5U1z/LU5d/ztETv8tRVP/LDI0/ygfH/8dFRP/HBUV/yYeIv9dVWH/eWh5/3Vmd/9gVF7/X1di/19V
        ZP9cVV7/WVJa/1RKVP9NRlH/UEhX/11TZP9pXHL/Zlts/1ZITP89JRr/Gw8Q/xkQEP8gFBL/HhUT/ykk
        Hv83Ny7/PD83/z9TV/86VV7/N0tU/zBASP9BUlT/ZGFV/ysgHv8eFhX/KCMp/11UY/9sX2//cGNp/8Ss
        pf/oysH/6ci//9/Bt//RtKr/wqac/5R+dP9pWVf/W09X/11UZv9gV2n/SDpE/yYaF/8aExP/HBES/xwT
        E/8jFxf/LSYk/z5AOP9BRTv/RVVY/zVGT/8vPD//Jisw/zI6PP9XVE7/Ozc2/yIbHv8nJCz/X1hn/5yG
        gf/Tq5n/8sq9//7Y0f/71c3/+NLK//TPxv/rycH/w6SX/7ORgP+Xdmr/SUBN/1hQY/80Ljr/Hhoe/xsW
        GP8cFxb/JR4d/y4wLP82Ozj/Oj03/0hMRv9DUFD/OkpM/ysyNv8lKi7/JCot/zY1OP9FRkT/SEdE/zAu
        M/+MfXn/1qyX/+m6qf/3z8D//97U//3Z0f/61M7/+9TL//DNx//Lqp7/vpaJ/6iFd/88Mjz/Ukha/y4r
        OP8gHyL/Hx0f/ycmKP8zNTP/LzIw/y8zMv8xOTX/Q01L/0hRUv8xPD//KTA0/ysuNP8qMTf/IiMn/ysu
        MP86NTb/Ojc+/5GChv/muKf/8r+x//XIu//81sn/+9PF//XLwP/rw7r/4by4/8mnoP/Bmo//u5KE/3Fc
        Wv8+OEX/MS45/yMnK/8oKi3/LS8w/y4wMP8oKyz/KSkr/zM7PP9JUU//PklK/zZARP8nMTX/JSkt/yQp
        MP8hIin/HRwi/yAhJv9SUF//no+W/+W6q//RqKf/upah/6GDmv99aYX/Zll5/2hfg/9xaYj/eXOR/3ts
        kf98bYH/aVxr/z44R/8oJTH/JCIq/yYmK/8lKi3/KSwy/ycrMP8qKiv/Njk7/0VPTf83Q0b/NkBI/zdE
        Sf8fJi7/Jy0z/yYpK/8hHyX/MC04/3Npf/+Shpf/oIqV/35yjf96YIb/hWGQ/35ik/99YpP/fWWR/4Bm
        if90Zon/eWyM/3Rtif9qZHv/U05f/ygmMf8aGyL/IyMn/ycoLf8qMDX/KS4w/ygqLP8wNTb/RkxO/zI8
        Pv8xPkL/PUxU/yUvOP8gIyn/KzA1/yMkKv9BQFD/fnWM/4l/mv97dIn/Z111/0g2Vf9EMk//RzNS/004
        WP9KNFD/UDxc/2RVcf90bIL/e3KN/3ZshP9fWm7/PDZG/xoYHf8eHiL/Kiow/ywwNf8nKy//KCkq/zo+
        Qf89Rkf/LDU7/y0zOf82SFL/KjQ9/yEoL/8iJS3/HR4m/1hWaf+NgJf/kIWi/352j/9zbYT/a1uH/3Be
        hP+CaoX/hGyP/35rif9+boX/d2+C/3hwhP+Ce5H/gHSK/2lgdv9NSFz/HRsi/yEgJf8jISb/Ly8z/ywv
        M/8uLzP/NDg6/zc9Pf8zQUj/LzlB/zhHUv8uOUL/ISYv/yMiLP8gICn/bGV+/5OEoP+cjK3/o5Go/867
        uv/049n/++XZ//fZ0//539b/+N3V/+3Jvv/luar/47is/8Skov+jiZP/c2R+/11Va/8kISv/IR4j/yso
        Lv8vLTT/Li83/zQyNf85Ojz/O0JE/0FOU/82RE3/MT1I/zA5RP8zOkf/LjE8/ywsOv93b4v/nI6n/8Sq
        tv/uxLn//t7P///x6f//8uf//+3j///q4v//6+P/+93R//DBr//xwLX/4Lex/7qYnP97bIX/ZVxz/0M9
        T/8vKzb/Liou/ywsMf8zMzf/OTk9/zw/Qv9FTE//P0hL/zxIUf85REn/KS42/ystNf88P03/Oj9T/3dv
        jv+tm67/+srD//7OwP//3Mv//+bU//bRvv/hwrn/68m7//vayv//38//+868//jLwf/qv7f/vpyh/3tt
        iv9sYXv/PTtK/zMwOv8tKi//LSsu/zg4P/9CRkr/P0RK/0VITP9BTlD/Mj9J/ycuNv8mKzP/LzI9/0BG
        WP9IS2P/fHKS/6WWr//40sz//9jJ//TIuv++mpH/cFZk/5eFj/+Zg4v/tZua/+jAsv/rxMH/xay9/7qe
        sP+ljKD/gXGP/3Bifv9DPk//Ni83/zQxOP80MTb/OzxC/z0/Q/9GR0v/SlRV/0lWW/88SFD/KTA5/ycr
        Mv8wMj3/Qkpb/09NZP+Kfpv/qpew/8+zwv//1c//9ce8/+jDt//n08//+u7q//nt5f/46d//3Lmu//bP
        x/+4oLf/o5Ou/5qJov+JeJT/b2OA/0c/UP83MTj/NjE2/zIwNP86Oj7/Ozw//0JFR/9QU1b/QlRZ/0hV
        Xv80Pkf/KCs1/ystNf8+RVP/XFlv/4J3j/+fh5r/zrG9///Ryv/1xLn//eng///57P///fH///vs///1
        5//w0cb/98zD/8utuf+qk6f/nYSZ/5B8lv94aIT/SUNT/zYuMv83NDn/NDE0/0VDR/9JSlD/RUtP/0lP
        Uf9BUFT/R1Vc/z1JU/8wND3/Li80/zs7Rf9hZXj/e3CD/5d4j//MpKv//9HD//XEuf//8eb///zu////
        8////O3///fr//bh1P/6z8T/yqSo/4xmh/+YeZP/jnmS/3xuiv9KQVH/PDM2/0E7QP9APD//SkdL/0xN
        UP9PUlL/XWBf/0pbXv9CUVn/RVRd/0BHT/8uNDz/OTlG/1RacP9ybIP/iHuS/5B5lv+mhZj/wJuf///2
        6v///vD////0///+8f///O3/+OXX//zVw//Mo6v/n4Cd/5Z6lf+LepP/hXaQ/0M5Rv8/NTb/TERI/0ZC
        RP9SUFL/TEtL/1xcXf9naWT/SVlf/0ZXW/9GU1v/Qk9Y/z5GUP8zNUD/S1Fi/1RSav9aT2n/mIKR/3tq
        df+Gbn7//vzz////9f////f////0////8f/Ww7z/jW54/2hXZP+EbH3/b111/4R2jP96boP/RDxH/0lC
        R/9HRkn/SkVG/1NPUP9SU1P/W1hY/2xsaP9WaW7/VWRq/0JRWv9PWF//Q0lR/zQ3Qf9GR1P/VVVo/2hY
        cv9/Zob/jHSD/3tmdv/89Ov////5////+P////f////2/5B9g/99YnH/hWx8/3NbfP90X33/i3iL/3Jl
        eP9KQ0n/TUVK/0hDR/9KRkn/TkxP/1tYWf9qa2n/bnFs/29/f/9ebG3/S1de/0dSWP9HT1j/QElW/0xS
        YP9lZHn/m42h/6OKoP+Sdoz/hHGG//Tn4P/+//3////6////+//k4eH/h3eL/5B9l/+ulK//rJWr/5WF
        nf+Ddon/bmN1/0tHTP9dVlr/TktN/1lWWv9TUFH/Xl5e/3Bxbf96fXT/dYeG/21ycv9PXGH/QUpU/zs9
        R/9ESFX/TVNf/1lZbf98don/dm19/3Fmdf+UhJT//ena/////v///////////+Tb1P+DeIj/b2Ry/4F1
        gv+bjJv/rZeg/42Clv9gWWj/TUZM/1dRV/9QSk3/VlJT/2FdXv9oaWb/fHx2/5CQhf9ziIv/cnp6/1Vi
        af9LVlz/REpS/z07Rf9GR1P/W1xx/5CLpP+onK//opao/8Ozvf//7t3////8///////+//3/8OTX/8Ct
        v//Crrr/3MHA//3Tyf/RsLP/gnmT/2hkbf9ZUFT/WlJU/1JNTv9iYGH/YmVk/3d4c/+OjIL/lZSI/2+J
        jf98gYD/ZniB/1JYX/9JS1b/PEBH/zc3Qv9OUmT/iIai/8y3w//cvsr/17/Q///q3f///vr///////79
        9//y39//7tjf///c1v//19D//8/I/963t/9zbH//Y19l/11XWv9eV1n/XlhZ/2lmZ/9+fXj/j4+F/4SK
        gv+Sk4n/bIuQ/4WHhP9ifIb/W2tw/1heZP9IUFf/QEFK/0RGUv9+fZj/xLjH///Yz///5t7///fu///9
        8v////f////5//7//P/+8uf//9nQ///Wzv/4zcj/yqqr/2BcZv9aT1T/ZWBj/19WWf9gXl//cHFt/46L
        g/+Nj4P/jpKI/6Wkk/9giJP/iYyH/2CCj/9acXz/Tlhe/z9FT/9CREv/TU9b/2dmf/+3rsL//97U///h
        1v////n////6////+v////r////6///46///2c3//tfO/8GmqP9uY27/ZF1f/1pTVv9fWlv/Z2Fj/3Fu
        bf+DgXv/kJCH/5KSh/+Zmo3/tLKb/12Fk/+RkIn/XIaW/1p9i/9Xa3P/WGFl/0hLUP9KS1P/UExc/5CL
        o//53db//97S///78f////f////4////+P////f///rt//zZzv/Ptbr/d3B9/1VLT/9aVFf/WVNX/1dR
        Uv9pZmb/iIR+/5SSif+zq5r/q6WW/7iznv+4t6D/VoGS/5WViv9YiqL/Vouf/1p9i/9hbHD/XmBj/1JT
        W/9KSVD/UE1d/6yhqf/x1M///ezh//327P/58er/8enj/+rd2P/KvsX/lpOq/2Zidf9QSlH/XVVW/1pZ
        Wf9VUFD/ZGNi/29vbP+JiYD/lZKH/5uXif+ooY7/qp+J/6aeiP9PgZP/mJmN/1WLpf9Pjqj/UYGW/3SH
        jf+Ph37/UE5P/z0+RP9LSE7/VVNb/3x6jP+ln6//pZ6v/56YsP97d5H/YWJ5/1hZZv9IR07/VU9T/0tD
        R/9NSEr/VVFS/2ZlY/92dnP/jYqE/5aRhv+hmor/tKiT/7WnkP+tnoX/npJ5/0t9kP+VnI//U4eg/0uM
        qf9NhJr/e5WY/7akk/98c2z/XVtZ/1pZWv9cV1b/VlFX/2Vgaf9eVmP/V1Jf/0xHUf9RSlH/WFVY/1RP
        Uf9UUFP/T0lK/1BJSv9oZmX/ent3/4WDff+clYj/qJ2N/7Snkv+8rpX/vK6U/7apjv+qnIH/SHyQ/5Sd
        kf9XiZ//Royn/02Gm/9/l5v/2cSt/8ezoP+rnI7/nY+D/4J3b/9sZGP/YVtc/1VQUf9WUlT/X1la/1ZQ
        Uf9WVFT/W1dV/1xXVv9dXVr/XFxb/35+eP+WkIL/p52L/7Wnk/+8rZb/wrGX/8Gxl//AsZb/va+U/7On
        jP9IfJD/j52S/1+Knf9Jjan/SYif/3yZnf/byK//z7ym/8+8pv/JuKT/wbGe/6uaif+ml4f/oJSE/5iJ
        f/+Zi4D/hXt0/3JrZ/96cm7/lIl+/4mBdv+Kgnj/npaH/7eplv+8rpj/v7CZ/8OxmP/CsZf/wLGW/7+w
        lP++r5P/uqyQ/0l+kP+HnJT/Y4iZ/0qNpv9LiZ7/epmb/+POs//jzbL/48yx/97IsP/Vw6n/zryo/8Ky
        nv/Bsp//uqya/7aolv+zpZP/r5+N/6+gjf++rpj/va6Y/72umP+/rpj/wbCZ/8Oym//CsZv/w7KY/8Sy
        mP/DsZj/w7GX/8Owlf+/r5L/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>